C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 20:10:17 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Ali Rah
                    -man\SimplicityStudio\v4_workspace\EFM8BB3_SpaceInvaders\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNIN
                    -GLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Ali Rahman\Simpli
                    -cityStudio\v4_workspace\EFM8BB3_SpaceInvaders\inc;C:\Users\Ali Rahman\SimplicityStudio\v4_workspace\EFM8BB3_SpaceInvader
                    -s\inc\config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/bsp;C:/SiliconLabs/SimplicityStu
                    -dio/v4/developer/sdks/8051/v4.0.3//kits/EFM8BB3_SLSTK2022A/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051
                    -/v4.0.3//Device/EFM8BB3/peripheral_driver/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common
                    -/drivers/efm8_joystick;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_rgb_led;C
                    -:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc;C:/SiliconLabs/Sim
                    -plicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/graphics;C:/SiliconLabs/SimplicityS
                    -tudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/config;C:/SiliconLabs/SimplicityStudio/v4/d
                    -eveloper/sdks/8051/v4.0.3//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Devic
                    -e/EFM8BB3/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_retargetserial) PR
                    -INT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_1_enter_DefaultMode_from_RESET();
  29   1              PORTS_2_enter_DefaultMode_from_RESET();
  30   1              PORTS_3_enter_DefaultMode_from_RESET();
  31   1              PBCFG_0_enter_DefaultMode_from_RESET();
  32   1              ADC_0_enter_DefaultMode_from_RESET();
  33   1              CLOCK_0_enter_DefaultMode_from_RESET();
  34   1              TIMER01_0_enter_DefaultMode_from_RESET();
  35   1              TIMER16_2_enter_DefaultMode_from_RESET();
  36   1              TIMER16_3_enter_DefaultMode_from_RESET();
  37   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  38   1              PCA_0_enter_DefaultMode_from_RESET();
  39   1              PCACH_0_enter_DefaultMode_from_RESET();
  40   1              PCACH_1_enter_DefaultMode_from_RESET();
  41   1              PCACH_2_enter_DefaultMode_from_RESET();
  42   1              SPI_0_enter_DefaultMode_from_RESET();
  43   1              UART_0_enter_DefaultMode_from_RESET();
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 20:10:17 PAGE 2   

  44   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  45   1              // Restore the SFRPAGE
  46   1              SFRPAGE = SFRPAGE_save;
  47   1              // [Config Calls]$
  48   1      
  49   1      }
  50          
  51          //================================================================================
  52          // WDT_0_enter_DefaultMode_from_RESET
  53          //================================================================================
  54          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  55   1              // $[WDTCN - Watchdog Timer Control]
  56   1              SFRPAGE = 0x00;
  57   1              //Disable Watchdog with key sequence
  58   1              WDTCN = 0xDE; //First key
  59   1              WDTCN = 0xAD; //Second key
  60   1              // [WDTCN - Watchdog Timer Control]$
  61   1      
  62   1      }
  63          
  64          //================================================================================
  65          // PORTS_0_enter_DefaultMode_from_RESET
  66          //================================================================================
  67          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  68   1              // $[P0 - Port 0 Pin Latch]
  69   1              // [P0 - Port 0 Pin Latch]$
  70   1      
  71   1              // $[P0MDOUT - Port 0 Output Mode]
  72   1              /***********************************************************************
  73   1               - P0.0 output is open-drain
  74   1               - P0.1 output is push-pull
  75   1               - P0.2 output is open-drain
  76   1               - P0.3 output is open-drain
  77   1               - P0.4 output is push-pull
  78   1               - P0.5 output is open-drain
  79   1               - P0.6 output is push-pull
  80   1               - P0.7 output is open-drain
  81   1               ***********************************************************************/
  82   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__PUSH_PULL
  83   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
  84   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
  85   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
  86   1              // [P0MDOUT - Port 0 Output Mode]$
  87   1      
  88   1              // $[P0MDIN - Port 0 Input Mode]
  89   1              // [P0MDIN - Port 0 Input Mode]$
  90   1      
  91   1              // $[P0SKIP - Port 0 Skip]
  92   1              /***********************************************************************
  93   1               - P0.0 pin is skipped by the crossbar
  94   1               - P0.1 pin is skipped by the crossbar
  95   1               - P0.2 pin is skipped by the crossbar
  96   1               - P0.3 pin is skipped by the crossbar
  97   1               - P0.4 pin is not skipped by the crossbar
  98   1               - P0.5 pin is not skipped by the crossbar
  99   1               - P0.6 pin is not skipped by the crossbar
 100   1               - P0.7 pin is not skipped by the crossbar
 101   1               ***********************************************************************/
 102   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 103   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__NOT_SKIPPED
 104   1                              | P0SKIP_B5__NOT_SKIPPED | P0SKIP_B6__NOT_SKIPPED
 105   1                              | P0SKIP_B7__NOT_SKIPPED;
 106   1              // [P0SKIP - Port 0 Skip]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 20:10:17 PAGE 3   

 107   1      
 108   1              // $[P0MASK - Port 0 Mask]
 109   1              // [P0MASK - Port 0 Mask]$
 110   1      
 111   1              // $[P0MAT - Port 0 Match]
 112   1              // [P0MAT - Port 0 Match]$
 113   1      
 114   1      }
 115          
 116          //================================================================================
 117          // PORTS_1_enter_DefaultMode_from_RESET
 118          //================================================================================
 119          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 120   1              // $[P1 - Port 1 Pin Latch]
 121   1              // [P1 - Port 1 Pin Latch]$
 122   1      
 123   1              // $[P1MDOUT - Port 1 Output Mode]
 124   1              /***********************************************************************
 125   1               - P1.0 output is push-pull
 126   1               - P1.1 output is push-pull
 127   1               - P1.2 output is open-drain
 128   1               - P1.3 output is open-drain
 129   1               - P1.4 output is push-pull
 130   1               - P1.5 output is push-pull
 131   1               - P1.6 output is push-pull
 132   1               - P1.7 output is open-drain
 133   1               ***********************************************************************/
 134   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL
 135   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 136   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__PUSH_PULL
 137   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__OPEN_DRAIN;
 138   1              // [P1MDOUT - Port 1 Output Mode]$
 139   1      
 140   1              // $[P1MDIN - Port 1 Input Mode]
 141   1              /***********************************************************************
 142   1               - P1.0 pin is configured for digital mode
 143   1               - P1.1 pin is configured for digital mode
 144   1               - P1.2 pin is configured for digital mode
 145   1               - P1.3 pin is configured for digital mode
 146   1               - P1.4 pin is configured for digital mode
 147   1               - P1.5 pin is configured for digital mode
 148   1               - P1.6 pin is configured for digital mode
 149   1               - P1.7 pin is configured for analog mode
 150   1               ***********************************************************************/
 151   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 152   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 153   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 154   1              // [P1MDIN - Port 1 Input Mode]$
 155   1      
 156   1              // $[P1SKIP - Port 1 Skip]
 157   1              /***********************************************************************
 158   1               - P1.0 pin is not skipped by the crossbar
 159   1               - P1.1 pin is skipped by the crossbar
 160   1               - P1.2 pin is skipped by the crossbar
 161   1               - P1.3 pin is skipped by the crossbar
 162   1               - P1.4 pin is not skipped by the crossbar
 163   1               - P1.5 pin is not skipped by the crossbar
 164   1               - P1.6 pin is not skipped by the crossbar
 165   1               - P1.7 pin is skipped by the crossbar
 166   1               ***********************************************************************/
 167   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 168   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__NOT_SKIPPED
 169   1                              | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 20:10:17 PAGE 4   

 170   1                              | P1SKIP_B7__SKIPPED;
 171   1              // [P1SKIP - Port 1 Skip]$
 172   1      
 173   1              // $[P1MASK - Port 1 Mask]
 174   1              // [P1MASK - Port 1 Mask]$
 175   1      
 176   1              // $[P1MAT - Port 1 Match]
 177   1              // [P1MAT - Port 1 Match]$
 178   1      
 179   1      }
 180          
 181          //================================================================================
 182          // PORTS_2_enter_DefaultMode_from_RESET
 183          //================================================================================
 184          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 185   1              // $[P2 - Port 2 Pin Latch]
 186   1              // [P2 - Port 2 Pin Latch]$
 187   1      
 188   1              // $[P2MDOUT - Port 2 Output Mode]
 189   1              /***********************************************************************
 190   1               - P2.0 output is open-drain
 191   1               - P2.1 output is open-drain
 192   1               - P2.2 output is open-drain
 193   1               - P2.3 output is push-pull
 194   1               - P2.4 output is open-drain
 195   1               - P2.5 output is open-drain
 196   1               - P2.6 output is push-pull
 197   1               ***********************************************************************/
 198   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
 199   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
 200   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 201   1                              | P2MDOUT_B6__PUSH_PULL;
 202   1              // [P2MDOUT - Port 2 Output Mode]$
 203   1      
 204   1              // $[P2MDIN - Port 2 Input Mode]
 205   1              // [P2MDIN - Port 2 Input Mode]$
 206   1      
 207   1              // $[P2SKIP - Port 2 Skip]
 208   1              /***********************************************************************
 209   1               - P2.0 pin is not skipped by the crossbar
 210   1               - P2.1 pin is not skipped by the crossbar
 211   1               - P2.2 pin is not skipped by the crossbar
 212   1               - P2.3 pin is skipped by the crossbar
 213   1               ***********************************************************************/
 214   1              SFRPAGE = 0x20;
 215   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
 216   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 217   1              // [P2SKIP - Port 2 Skip]$
 218   1      
 219   1              // $[P2MASK - Port 2 Mask]
 220   1              // [P2MASK - Port 2 Mask]$
 221   1      
 222   1              // $[P2MAT - Port 2 Match]
 223   1              // [P2MAT - Port 2 Match]$
 224   1      
 225   1      }
 226          
 227          //================================================================================
 228          // PORTS_3_enter_DefaultMode_from_RESET
 229          //================================================================================
 230          extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
 231   1              // $[P3 - Port 3 Pin Latch]
 232   1              // [P3 - Port 3 Pin Latch]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 20:10:17 PAGE 5   

 233   1      
 234   1              // $[P3MDOUT - Port 3 Output Mode]
 235   1              /***********************************************************************
 236   1               - P3.0 output is open-drain
 237   1               - P3.1 output is open-drain
 238   1               - P3.2 output is open-drain
 239   1               - P3.3 output is open-drain
 240   1               - P3.4 output is push-pull
 241   1               - P3.7 output is open-drain
 242   1               ***********************************************************************/
 243   1              P3MDOUT = P3MDOUT_B0__OPEN_DRAIN | P3MDOUT_B1__OPEN_DRAIN
 244   1                              | P3MDOUT_B2__OPEN_DRAIN | P3MDOUT_B3__OPEN_DRAIN
 245   1                              | P3MDOUT_B4__PUSH_PULL | P3MDOUT_B7__OPEN_DRAIN;
 246   1              // [P3MDOUT - Port 3 Output Mode]$
 247   1      
 248   1              // $[P3MDIN - Port 3 Input Mode]
 249   1              // [P3MDIN - Port 3 Input Mode]$
 250   1      
 251   1      }
 252          
 253          //================================================================================
 254          // PBCFG_0_enter_DefaultMode_from_RESET
 255          //================================================================================
 256          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 257   1              // $[XBR2 - Port I/O Crossbar 2]
 258   1              /***********************************************************************
 259   1               - Weak Pullups enabled 
 260   1               - Crossbar enabled
 261   1               - UART1 I/O unavailable at Port pin
 262   1               - UART1 RTS1 unavailable at Port pin
 263   1               - UART1 CTS1 unavailable at Port pin
 264   1               ***********************************************************************/
 265   1              SFRPAGE = 0x00;
 266   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 267   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 268   1                              | XBR2_URT1CTSE__DISABLED;
 269   1              // [XBR2 - Port I/O Crossbar 2]$
 270   1      
 271   1              // $[PRTDRV - Port Drive Strength]
 272   1              // [PRTDRV - Port Drive Strength]$
 273   1      
 274   1              // $[XBR0 - Port I/O Crossbar 0]
 275   1              /***********************************************************************
 276   1               - UART0 TX0, RX0 routed to Port pins P0.4 and P0.5
 277   1               - SPI I/O routed to Port pins
 278   1               - SMBus 0 I/O unavailable at Port pins
 279   1               - CP0 unavailable at Port pin
 280   1               - Asynchronous CP0 unavailable at Port pin
 281   1               - CP1 unavailable at Port pin
 282   1               - Asynchronous CP1 unavailable at Port pin
 283   1               - SYSCLK unavailable at Port pin
 284   1               ***********************************************************************/
 285   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 286   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 287   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 288   1              // [XBR0 - Port I/O Crossbar 0]$
 289   1      
 290   1              // $[XBR1 - Port I/O Crossbar 1]
 291   1              /***********************************************************************
 292   1               - CEX0, CEX1, CEX2 routed to Port pins
 293   1               - ECI unavailable at Port pin
 294   1               - T0 unavailable at Port pin
 295   1               - T1 unavailable at Port pin
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 20:10:17 PAGE 6   

 296   1               - T2 unavailable at Port pin
 297   1               ***********************************************************************/
 298   1              XBR1 = XBR1_PCA0ME__CEX0_TO_CEX2 | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
 299   1                              | XBR1_T1E__DISABLED | XBR1_T2E__DISABLED;
 300   1              // [XBR1 - Port I/O Crossbar 1]$
 301   1      
 302   1      }
 303          
 304          //================================================================================
 305          // ADC_0_enter_DefaultMode_from_RESET
 306          //================================================================================
 307          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 308   1              // $[ADC0CN2 - ADC0 Control 2]
 309   1              /*
 310   1               // ADCM (Start of Conversion Mode Select) = TIMER0 (ADC0 conversion
 311   1               //     initiated on overflow of Timer 0.)
 312   1               // PACEN (Preserve Accumulator Enable) = PAC_DISABLED (The ADC
 313   1               //     accumulator is over-written with the results of any conversion (or set
 314   1               //     of conversions as specified by ADRPT).)
 315   1               */
 316   1              ADC0CN2 = ADC0CN2_ADCM__TIMER0 | ADC0CN2_PACEN__PAC_DISABLED;
 317   1              // [ADC0CN2 - ADC0 Control 2]$
 318   1      
 319   1              // $[ADC0CN1 - ADC0 Control 1]
 320   1              /*
 321   1               // ADBITS (Resolution Control) = 10_BIT (ADC0 operates in 10-bit mode.)
 322   1               // ADSJST (Accumulator Shift and Justify) = RIGHT_NO_SHIFT (Right
 323   1               //     justified. No shifting applied.)
 324   1               // ADRPT (Repeat Count) = ACC_1 (Perform and Accumulate 1 conversion.)
 325   1               */
 326   1              ADC0CN1 = ADC0CN1_ADBITS__10_BIT | ADC0CN1_ADSJST__RIGHT_NO_SHIFT
 327   1                              | ADC0CN1_ADRPT__ACC_1;
 328   1              // [ADC0CN1 - ADC0 Control 1]$
 329   1      
 330   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 331   1              /*
 332   1               // ADC0MX (AMUX0 Positive Input Selection) = ADC0P13 (Select ADC0.13.)
 333   1               */
 334   1              ADC0MX = ADC0MX_ADC0MX__ADC0P13;
 335   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 336   1      
 337   1              // $[ADC0CF2 - ADC0 Power Control]
 338   1              /*
 339   1               // GNDSL (Analog Ground Reference) = GND_PIN (The ADC0 ground reference
 340   1               //     is the GND pin.)
 341   1               // REFSL (Voltage Reference Select) = VDD_PIN (The ADC0 voltage reference
 342   1               //     is the VDD pin.)
 343   1               // ADPWR (Power Up Delay Time) = 0x1F
 344   1               */
 345   1              ADC0CF2 = ADC0CF2_GNDSL__GND_PIN | ADC0CF2_REFSL__VDD_PIN
 346   1                              | (0x1F << ADC0CF2_ADPWR__SHIFT);
 347   1              // [ADC0CF2 - ADC0 Power Control]$
 348   1      
 349   1              // $[ADC0CF0 - ADC0 Configuration]
 350   1              /*
 351   1               // ADCLKSEL (ADC Clock Select) = SYSCLK (ADCCLK = SYSCLK.)
 352   1               // ADSC (SAR Clock Divider) = 0x01
 353   1               */
 354   1              ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
 355   1              // [ADC0CF0 - ADC0 Configuration]$
 356   1      
 357   1              // $[ADC0CF1 - ADC0 Configuration]
 358   1              /*
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 20:10:17 PAGE 7   

 359   1               // ADLPM (Low Power Mode Enable) = LP_DISABLED (Disable low power
 360   1               //     mode.)
 361   1               // ADTK (Conversion Tracking Time) = 0x01
 362   1               */
 363   1              ADC0CF1 = ADC0CF1_ADLPM__LP_DISABLED | (0x01 << ADC0CF1_ADTK__SHIFT);
 364   1              // [ADC0CF1 - ADC0 Configuration]$
 365   1      
 366   1              // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
 367   1              // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
 368   1      
 369   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 370   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 371   1      
 372   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 373   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 374   1      
 375   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 376   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 377   1      
 378   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 379   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 380   1      
 381   1              // $[ADC0ASCF - ADC0 Autoscan Configuration]
 382   1              // [ADC0ASCF - ADC0 Autoscan Configuration]$
 383   1      
 384   1              // $[ADC0CN0 - ADC0 Control 0]
 385   1              /*
 386   1               // ADEN (ADC Enable) = ENABLED (Enable ADC0 (active and ready for data
 387   1               //     conversions).)
 388   1               */
 389   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED;
 390   1              // [ADC0CN0 - ADC0 Control 0]$
 391   1      }
 392          
 393          //================================================================================
 394          // CLOCK_0_enter_DefaultMode_from_RESET
 395          //================================================================================
 396          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 397   1              // $[HFOSC1 Setup]
 398   1              // [HFOSC1 Setup]$
 399   1      
 400   1              // $[CLKSEL - Clock Select]
 401   1              /***********************************************************************
 402   1               - Clock derived from the Internal High Frequency Oscillator 0
 403   1               - SYSCLK is equal to selected clock source divided by 1
 404   1               ***********************************************************************/
 405   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 406   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 407   1                      ;
 408   1              // [CLKSEL - Clock Select]$
 409   1      
 410   1      }
 411          
 412          //================================================================================
 413          // TIMER16_3_enter_DefaultMode_from_RESET
 414          //================================================================================
 415          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 416   1              // $[Timer Initialization]
 417   1              // Save Timer Configuration
 418   1              uint8_t TMR3CN0_TR3_save;
 419   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 420   1              // Stop Timer
 421   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 20:10:17 PAGE 8   

 422   1              // [Timer Initialization]$
 423   1      
 424   1              // $[TMR3CN1 - Timer 3 Control 1]
 425   1              // [TMR3CN1 - Timer 3 Control 1]$
 426   1      
 427   1              // $[TMR3CN0 - Timer 3 Control]
 428   1              // [TMR3CN0 - Timer 3 Control]$
 429   1      
 430   1              // $[TMR3H - Timer 3 High Byte]
 431   1              /***********************************************************************
 432   1               - Timer 3 High Byte = 0xF8
 433   1               ***********************************************************************/
 434   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 435   1              // [TMR3H - Timer 3 High Byte]$
 436   1      
 437   1              // $[TMR3L - Timer 3 Low Byte]
 438   1              /***********************************************************************
 439   1               - Timer 3 Low Byte = 0x06
 440   1               ***********************************************************************/
 441   1              TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
 442   1              // [TMR3L - Timer 3 Low Byte]$
 443   1      
 444   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 445   1              /***********************************************************************
 446   1               - Timer 3 Reload High Byte = 0xF8
 447   1               ***********************************************************************/
 448   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 449   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 450   1      
 451   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 452   1              /***********************************************************************
 453   1               - Timer 3 Reload Low Byte = 0x06
 454   1               ***********************************************************************/
 455   1              TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
 456   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 457   1      
 458   1              // $[TMR3CN0]
 459   1              /***********************************************************************
 460   1               - Start Timer 3 running
 461   1               ***********************************************************************/
 462   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 463   1              // [TMR3CN0]$
 464   1      
 465   1              // $[Timer Restoration]
 466   1              // Restore Timer Configuration
 467   1              TMR3CN0 |= TMR3CN0_TR3_save;
 468   1              // [Timer Restoration]$
 469   1      
 470   1      }
 471          
 472          //================================================================================
 473          // PCA_0_enter_DefaultMode_from_RESET
 474          //================================================================================
 475          extern void PCA_0_enter_DefaultMode_from_RESET(void) {
 476   1              // $[PCA Off]
 477   1              PCA0CN0_CR = PCA0CN0_CR__STOP;
 478   1              // [PCA Off]$
 479   1      
 480   1              // $[PCA0MD - PCA Mode]
 481   1              // [PCA0MD - PCA Mode]$
 482   1      
 483   1              // $[PCA0CENT - PCA Center Alignment Enable]
 484   1              // [PCA0CENT - PCA Center Alignment Enable]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 20:10:17 PAGE 9   

 485   1      
 486   1              // $[PCA0CLR - PCA Comparator Clear Control]
 487   1              // [PCA0CLR - PCA Comparator Clear Control]$
 488   1      
 489   1              // $[PCA0L - PCA Counter/Timer Low Byte]
 490   1              // [PCA0L - PCA Counter/Timer Low Byte]$
 491   1      
 492   1              // $[PCA0H - PCA Counter/Timer High Byte]
 493   1              // [PCA0H - PCA Counter/Timer High Byte]$
 494   1      
 495   1              // $[PCA0POL - PCA Output Polarity]
 496   1              // [PCA0POL - PCA Output Polarity]$
 497   1      
 498   1              // $[PCA0PWM - PCA PWM Configuration]
 499   1              // [PCA0PWM - PCA PWM Configuration]$
 500   1      
 501   1              // $[PCA On]
 502   1              PCA0CN0_CR = PCA0CN0_CR__RUN;
 503   1              // [PCA On]$
 504   1      
 505   1      }
 506          
 507          //================================================================================
 508          // PCACH_0_enter_DefaultMode_from_RESET
 509          //================================================================================
 510          extern void PCACH_0_enter_DefaultMode_from_RESET(void) {
 511   1              // $[PCA0 Settings Save]
 512   1              // Select Capture/Compare register)
 513   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 514   1              // [PCA0 Settings Save]$
 515   1      
 516   1              // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
 517   1              /***********************************************************************
 518   1               - Disable negative edge capture
 519   1               - Disable CCF0 interrupts
 520   1               - Disable match function
 521   1               - 8 to 11-bit PWM selected
 522   1               - Disable positive edge capture
 523   1               - Enable comparator function
 524   1               - Enable PWM function
 525   1               - Disable toggle function
 526   1               ***********************************************************************/
 527   1              PCA0CPM0 = PCA0CPM0_CAPN__DISABLED | PCA0CPM0_ECCF__DISABLED
 528   1                              | PCA0CPM0_MAT__DISABLED | PCA0CPM0_PWM16__8_BIT
 529   1                              | PCA0CPM0_CAPP__DISABLED | PCA0CPM0_ECOM__ENABLED
 530   1                              | PCA0CPM0_PWM__ENABLED | PCA0CPM0_TOG__DISABLED;
 531   1              // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 532   1      
 533   1              // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 534   1              // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
 535   1      
 536   1              // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 537   1              // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
 538   1      
 539   1              // $[Auto-reload]
 540   1              // [Auto-reload]$
 541   1      
 542   1              // $[PCA0 Settings Restore]
 543   1              // [PCA0 Settings Restore]$
 544   1      
 545   1      }
 546          
 547          //================================================================================
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 20:10:17 PAGE 10  

 548          // PCACH_1_enter_DefaultMode_from_RESET
 549          //================================================================================
 550          extern void PCACH_1_enter_DefaultMode_from_RESET(void) {
 551   1              // $[PCA0 Settings Save]
 552   1              // Select Capture/Compare register)
 553   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 554   1              // [PCA0 Settings Save]$
 555   1      
 556   1              // $[PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]
 557   1              /***********************************************************************
 558   1               - Disable negative edge capture
 559   1               - Disable CCF1 interrupts
 560   1               - Disable match function
 561   1               - 8 to 11-bit PWM selected
 562   1               - Disable positive edge capture
 563   1               - Enable comparator function
 564   1               - Enable PWM function
 565   1               - Disable toggle function
 566   1               ***********************************************************************/
 567   1              PCA0CPM1 = PCA0CPM1_CAPN__DISABLED | PCA0CPM1_ECCF__DISABLED
 568   1                              | PCA0CPM1_MAT__DISABLED | PCA0CPM1_PWM16__8_BIT
 569   1                              | PCA0CPM1_CAPP__DISABLED | PCA0CPM1_ECOM__ENABLED
 570   1                              | PCA0CPM1_PWM__ENABLED | PCA0CPM1_TOG__DISABLED;
 571   1              // [PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]$
 572   1      
 573   1              // $[PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]
 574   1              // [PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]$
 575   1      
 576   1              // $[PCA0CPH1 - PCA Channel 1 Capture Module High Byte]
 577   1              // [PCA0CPH1 - PCA Channel 1 Capture Module High Byte]$
 578   1      
 579   1              // $[Auto-reload]
 580   1              // [Auto-reload]$
 581   1      
 582   1              // $[PCA0 Settings Restore]
 583   1              // [PCA0 Settings Restore]$
 584   1      
 585   1      }
 586          
 587          //================================================================================
 588          // PCACH_2_enter_DefaultMode_from_RESET
 589          //================================================================================
 590          extern void PCACH_2_enter_DefaultMode_from_RESET(void) {
 591   1              // $[PCA0 Settings Save]
 592   1              // Select Capture/Compare register)
 593   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 594   1              // [PCA0 Settings Save]$
 595   1      
 596   1              // $[PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]
 597   1              /***********************************************************************
 598   1               - Disable negative edge capture
 599   1               - Disable CCF2 interrupts
 600   1               - Disable match function
 601   1               - 8 to 11-bit PWM selected
 602   1               - Disable positive edge capture
 603   1               - Enable comparator function
 604   1               - Enable PWM function
 605   1               - Disable toggle function
 606   1               ***********************************************************************/
 607   1              PCA0CPM2 = PCA0CPM2_CAPN__DISABLED | PCA0CPM2_ECCF__DISABLED
 608   1                              | PCA0CPM2_MAT__DISABLED | PCA0CPM2_PWM16__8_BIT
 609   1                              | PCA0CPM2_CAPP__DISABLED | PCA0CPM2_ECOM__ENABLED
 610   1                              | PCA0CPM2_PWM__ENABLED | PCA0CPM2_TOG__DISABLED;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 20:10:17 PAGE 11  

 611   1              // [PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]$
 612   1      
 613   1              // $[PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]
 614   1              // [PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]$
 615   1      
 616   1              // $[PCA0CPH2 - PCA Channel 2 Capture Module High Byte]
 617   1              // [PCA0CPH2 - PCA Channel 2 Capture Module High Byte]$
 618   1      
 619   1              // $[Auto-reload]
 620   1              // [Auto-reload]$
 621   1      
 622   1              // $[PCA0 Settings Restore]
 623   1              // [PCA0 Settings Restore]$
 624   1      
 625   1      }
 626          
 627          //================================================================================
 628          // SPI_0_enter_DefaultMode_from_RESET
 629          //================================================================================
 630          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
 631   1              // $[SPI0CKR - SPI0 Clock Rate]
 632   1              /***********************************************************************
 633   1               - SPI0 Clock Rate = 0x0B
 634   1               ***********************************************************************/
 635   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
 636   1              // [SPI0CKR - SPI0 Clock Rate]$
 637   1      
 638   1              // $[SPI0CFG - SPI0 Configuration]
 639   1              /***********************************************************************
 640   1               - Enable master mode. Operate as a master
 641   1               ***********************************************************************/
 642   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 643   1              // [SPI0CFG - SPI0 Configuration]$
 644   1      
 645   1              // $[SPI0PCF - SPI0 Pin Configuration]
 646   1              // [SPI0PCF - SPI0 Pin Configuration]$
 647   1      
 648   1              // $[SPI0CN0 - SPI0 Control]
 649   1              /***********************************************************************
 650   1               - Enable the SPI module
 651   1               - 3-Wire Slave or 3-Wire Master Mode
 652   1               ***********************************************************************/
 653   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 654   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 655   1              // [SPI0CN0 - SPI0 Control]$
 656   1      
 657   1              // $[SPI0FCN0 - SPI0 FIFO Control 0]
 658   1              // [SPI0FCN0 - SPI0 FIFO Control 0]$
 659   1      
 660   1              // $[SPI0FCN1 - SPI0 FIFO Control 1]
 661   1              // [SPI0FCN1 - SPI0 FIFO Control 1]$
 662   1      
 663   1      }
 664          
 665          //================================================================================
 666          // INTERRUPT_0_enter_DefaultMode_from_RESET
 667          //================================================================================
 668          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 669   1              // $[EIE1 - Extended Interrupt Enable 1]
 670   1              /***********************************************************************
 671   1               - Disable ADC0 Conversion Complete interrupt
 672   1               - Disable ADC0 Window Comparison interrupt
 673   1               - Disable CP0 interrupts
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 20:10:17 PAGE 12  

 674   1               - Disable CP1 interrupts
 675   1               - Disable all Port Match interrupts
 676   1               - Disable all PCA0 interrupts
 677   1               - Disable all SMB0 interrupts
 678   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 679   1               ***********************************************************************/
 680   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 681   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 682   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__ENABLED;
 683   1              // [EIE1 - Extended Interrupt Enable 1]$
 684   1      
 685   1              // $[EIE2 - Extended Interrupt Enable 2]
 686   1              // [EIE2 - Extended Interrupt Enable 2]$
 687   1      
 688   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 689   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 690   1      
 691   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 692   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 693   1      
 694   1              // $[EIP2 - Extended Interrupt Priority 2]
 695   1              // [EIP2 - Extended Interrupt Priority 2]$
 696   1      
 697   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 698   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 699   1      
 700   1              // $[IE - Interrupt Enable]
 701   1              /***********************************************************************
 702   1               - Enable each interrupt according to its individual mask setting
 703   1               - Disable external interrupt 0
 704   1               - Disable external interrupt 1
 705   1               - Enable interrupt requests generated by SPI0
 706   1               - Disable all Timer 0 interrupt
 707   1               - Disable all Timer 1 interrupt
 708   1               - Enable interrupt requests generated by the TF2L or TF2H flags
 709   1               - Disable UART0 interrupt
 710   1               ***********************************************************************/
 711   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 712   1                              | IE_ESPI0__ENABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 713   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 714   1              // [IE - Interrupt Enable]$
 715   1      
 716   1              // $[IP - Interrupt Priority]
 717   1              // [IP - Interrupt Priority]$
 718   1      
 719   1              // $[IPH - Interrupt Priority High]
 720   1              // [IPH - Interrupt Priority High]$
 721   1      
 722   1      }
 723          
 724          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 725   1              // $[Timer Initialization]
 726   1              //Save Timer Configuration
 727   1              uint8_t TCON_save;
 728   1              TCON_save = TCON;
 729   1              //Stop Timers
 730   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 731   1      
 732   1              // [Timer Initialization]$
 733   1      
 734   1              // $[TH0 - Timer 0 High Byte]
 735   1              /***********************************************************************
 736   1               - Timer 0 High Byte = 0x01
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 20:10:17 PAGE 13  

 737   1               ***********************************************************************/
 738   1              TH0 = (0x01 << TH0_TH0__SHIFT);
 739   1              // [TH0 - Timer 0 High Byte]$
 740   1      
 741   1              // $[TL0 - Timer 0 Low Byte]
 742   1              // [TL0 - Timer 0 Low Byte]$
 743   1      
 744   1              // $[TH1 - Timer 1 High Byte]
 745   1              /***********************************************************************
 746   1               - Timer 1 High Byte = 0x96
 747   1               ***********************************************************************/
 748   1              TH1 = (0x96 << TH1_TH1__SHIFT);
 749   1              // [TH1 - Timer 1 High Byte]$
 750   1      
 751   1              // $[TL1 - Timer 1 Low Byte]
 752   1              // [TL1 - Timer 1 Low Byte]$
 753   1      
 754   1              // $[Timer Restoration]
 755   1              //Restore Timer Configuration
 756   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 757   1      
 758   1              // [Timer Restoration]$
 759   1      
 760   1      }
 761          
 762          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 763   1              // $[CKCON0 - Clock Control 0]
 764   1              /***********************************************************************
 765   1               - System clock divided by 48
 766   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 767   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 768   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 769   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 770   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 771   1               - Timer 1 uses the system clock
 772   1               ***********************************************************************/
 773   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 774   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 775   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 776   1                              | CKCON0_T1M__SYSCLK;
 777   1              // [CKCON0 - Clock Control 0]$
 778   1      
 779   1              // $[CKCON1 - Clock Control 1]
 780   1              // [CKCON1 - Clock Control 1]$
 781   1      
 782   1              // $[TMOD - Timer 0/1 Mode]
 783   1              /***********************************************************************
 784   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 785   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 786   1               - Timer Mode
 787   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 788   1               - Timer Mode
 789   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 790   1               ***********************************************************************/
 791   1              TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 792   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 793   1              // [TMOD - Timer 0/1 Mode]$
 794   1      
 795   1              // $[TCON - Timer 0/1 Control]
 796   1              /***********************************************************************
 797   1               - Start Timer 0 running
 798   1               - Start Timer 1 running
 799   1               ***********************************************************************/
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 20:10:17 PAGE 14  

 800   1              TCON |= TCON_TR0__RUN | TCON_TR1__RUN;
 801   1              // [TCON - Timer 0/1 Control]$
 802   1      
 803   1      }
 804          
 805          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 806   1              // $[SCON0 - UART0 Serial Port Control]
 807   1              /***********************************************************************
 808   1               - UART0 reception enabled
 809   1               ***********************************************************************/
 810   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 811   1              // [SCON0 - UART0 Serial Port Control]$
 812   1      
 813   1      }
 814          
 815          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 816   1              // $[Timer Initialization]
 817   1              // Save Timer Configuration
 818   1              uint8_t TMR2CN0_TR2_save;
 819   1              TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 820   1              // Stop Timer
 821   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 822   1              // [Timer Initialization]$
 823   1      
 824   1              // $[TMR2CN1 - Timer 2 Control 1]
 825   1              // [TMR2CN1 - Timer 2 Control 1]$
 826   1      
 827   1              // $[TMR2CN0 - Timer 2 Control]
 828   1              // [TMR2CN0 - Timer 2 Control]$
 829   1      
 830   1              // $[TMR2H - Timer 2 High Byte]
 831   1              /***********************************************************************
 832   1               - Timer 2 High Byte = 0xFF
 833   1               ***********************************************************************/
 834   1              TMR2H = (0xFF << TMR2H_TMR2H__SHIFT);
 835   1              // [TMR2H - Timer 2 High Byte]$
 836   1      
 837   1              // $[TMR2L - Timer 2 Low Byte]
 838   1              /***********************************************************************
 839   1               - Timer 2 Low Byte = 0x34
 840   1               ***********************************************************************/
 841   1              TMR2L = (0x34 << TMR2L_TMR2L__SHIFT);
 842   1              // [TMR2L - Timer 2 Low Byte]$
 843   1      
 844   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 845   1              /***********************************************************************
 846   1               - Timer 2 Reload High Byte = 0xFF
 847   1               ***********************************************************************/
 848   1              TMR2RLH = (0xFF << TMR2RLH_TMR2RLH__SHIFT);
 849   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 850   1      
 851   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
 852   1              /***********************************************************************
 853   1               - Timer 2 Reload Low Byte = 0x34
 854   1               ***********************************************************************/
 855   1              TMR2RLL = (0x34 << TMR2RLL_TMR2RLL__SHIFT);
 856   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 857   1      
 858   1              // $[TMR2CN0]
 859   1              // [TMR2CN0]$
 860   1      
 861   1              // $[Timer Restoration]
 862   1              // Restore Timer Configuration
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 20:10:17 PAGE 15  

 863   1              TMR2CN0 |= TMR2CN0_TR2_save;
 864   1              // [Timer Restoration]$
 865   1      
 866   1      }
 867          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    278    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
