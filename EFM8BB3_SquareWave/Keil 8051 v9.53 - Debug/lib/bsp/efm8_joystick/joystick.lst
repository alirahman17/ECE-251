C51 COMPILER V9.53.0.0   JOYSTICK                                                          03/21/2017 23:27:13 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE JOYSTICK
OBJECT MODULE PLACED IN .\lib\bsp\efm8_joystick\joystick.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Ali Rah
                    -man\SimplicityStudio\v4_workspace\EFM8BB3_DAC_2\lib\bsp\efm8_joystick\joystick.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE
                    -) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Ali Rahma
                    -n\SimplicityStudio\v4_workspace\EFM8BB3_DAC_2\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/
                    -shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc) PRINT(.\lib\bsp\efm
                    -8_joystick\joystick.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\lib\bsp\efm8_joystick\joystick.OBJ)

line level    source

   1          /////////////////////////////////////////////////////////////////////////////
   2          // joystick.c
   3          /////////////////////////////////////////////////////////////////////////////
   4          
   5          
   6          /////////////////////////////////////////////////////////////////////////////
   7          // Includes
   8          /////////////////////////////////////////////////////////////////////////////
   9          
  10          #include "bsp.h"
  11          #include "joystick.h"
  12          
  13          /////////////////////////////////////////////////////////////////////////////
  14          // Global Functions
  15          /////////////////////////////////////////////////////////////////////////////
  16          
  17          //-----------------------------------------------------------------------------
  18          // JOYSTICK_convert_mv_to_direction
  19          //-----------------------------------------------------------------------------
  20          //
  21          // Converts ADC voltage (in mV) to cardinal/secondary direction. Direction is
  22          // saved to joystickDirection global.
  23          //
  24          // This function should be called after a new ADC sample is ready.
  25          //
  26          // This function calls Voltmeter_direction_isr(), a 2nd level interrupt defined
  27          // in the demo.
  28          //
  29          // mV - joystick voltage in millivolts (0 - 3300)
  30          //
  31          //-----------------------------------------------------------------------------
  32          uint8_t JOYSTICK_convert_mv_to_direction(uint32_t mV)
  33          {
  34   1          uint8_t joystickDirection;
  35   1      
  36   1          // determine which direction pad was pressed
  37   1          if ((mV >= 0) && \
  38   1              (mV <= JOYSTICK_MV_C + JOYSTICK_MV_ERROR))
  39   1          {
  40   2            joystickDirection = JOYSTICK_C;
  41   2          }
  42   1          else if ((mV >= JOYSTICK_MV_N - JOYSTICK_MV_ERROR) && \
  43   1                   (mV <= JOYSTICK_MV_N + JOYSTICK_MV_ERROR))
  44   1          {
  45   2            joystickDirection = JOYSTICK_N;
  46   2          }
  47   1          else if ((mV >= JOYSTICK_MV_E - JOYSTICK_MV_ERROR) && \
  48   1                   (mV <= JOYSTICK_MV_E + JOYSTICK_MV_ERROR))
  49   1          {
  50   2            joystickDirection = JOYSTICK_E;
  51   2          }
C51 COMPILER V9.53.0.0   JOYSTICK                                                          03/21/2017 23:27:13 PAGE 2   

  52   1          else if ((mV >= JOYSTICK_MV_S - JOYSTICK_MV_ERROR) && \
  53   1                   (mV <= JOYSTICK_MV_S + JOYSTICK_MV_ERROR))
  54   1          {
  55   2            joystickDirection = JOYSTICK_S;
  56   2          }
  57   1          else if ((mV >= JOYSTICK_MV_W - JOYSTICK_MV_ERROR) && \
  58   1                   (mV <= JOYSTICK_MV_W + JOYSTICK_MV_ERROR))
  59   1          {
  60   2            joystickDirection = JOYSTICK_W;
  61   2          }
  62   1      #if JOYSTICK_DIRECTIONS == CARDINAL_AND_SECONDARY
  63   1          else if ((mV >= JOYSTICK_MV_NE - JOYSTICK_MV_ERROR) && \
  64   1                   (mV <= JOYSTICK_MV_NE + JOYSTICK_MV_ERROR))
  65   1          {
  66   2            joystickDirection = JOYSTICK_NE;
  67   2          }
  68   1          else if ((mV >= JOYSTICK_MV_NW - JOYSTICK_MV_ERROR) && \
  69   1                   (mV <= JOYSTICK_MV_NW + JOYSTICK_MV_ERROR))
  70   1          {
  71   2            joystickDirection = JOYSTICK_NW;
  72   2          }
  73   1          else if ((mV >= JOYSTICK_MV_SE - JOYSTICK_MV_ERROR) && \
  74   1                   (mV <= JOYSTICK_MV_SE + JOYSTICK_MV_ERROR))
  75   1          {
  76   2            joystickDirection = JOYSTICK_SE;
  77   2          }
  78   1          else if ((mV >= JOYSTICK_MV_SW - JOYSTICK_MV_ERROR) && \
  79   1                   (mV <= JOYSTICK_MV_SW + JOYSTICK_MV_ERROR))
  80   1          {
  81   2            joystickDirection = JOYSTICK_SW;
  82   2          }
  83   1      #endif
  84   1          else
  85   1          {
  86   2            joystickDirection = JOYSTICK_NONE;
  87   2          }
  88   1      
  89   1          return joystickDirection;
  90   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    385    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
