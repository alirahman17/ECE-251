C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/21/2017 22:43:10 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Ali Rah
                    -man\SimplicityStudio\v4_workspace\EFM8BB3_DAC_2\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2
                    -) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Ali Rahman\SimplicityStud
                    -io\v4_workspace\EFM8BB3_DAC_2\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/shared/si8051bas
                    -e;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc) PRINT(.\src\InitDevice.lst) COND PA
                    -GEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          #include <stdio.h>
  13          
  14          // USER PROTOTYPES
  15          // USER FUNCTIONS
  16          
  17          // $[Library Includes]
  18          // [Library Includes]$
  19          
  20          //==============================================================================
  21          // enter_DefaultMode_from_RESET
  22          //==============================================================================
  23          extern void enter_DefaultMode_from_RESET(void) {
  24   1              // $[Config Calls]
  25   1              // Save the SFRPAGE
  26   1              uint8_t SFRPAGE_save = SFRPAGE;
  27   1              WDT_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_0_enter_DefaultMode_from_RESET();
  29   1              PORTS_1_enter_DefaultMode_from_RESET();
  30   1              PORTS_3_enter_DefaultMode_from_RESET();
  31   1              PBCFG_0_enter_DefaultMode_from_RESET();
  32   1              DAC_0_enter_DefaultMode_from_RESET();
  33   1              DAC_1_enter_DefaultMode_from_RESET();
  34   1              DACGCF_0_enter_DefaultMode_from_RESET();
  35   1              VREF_0_enter_DefaultMode_from_RESET();
  36   1              CLOCK_0_enter_DefaultMode_from_RESET();
  37   1              // Restore the SFRPAGE
  38   1              SFRPAGE = SFRPAGE_save;
  39   1              // [Config Calls]$
  40   1      
  41   1      }
  42          
  43          //================================================================================
  44          // WDT_0_enter_DefaultMode_from_RESET
  45          //================================================================================
  46          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  47   1              // $[WDTCN - Watchdog Timer Control]
  48   1              SFRPAGE = 0x00;
  49   1              //Disable Watchdog with key sequence
  50   1              WDTCN = 0xDE; //First key
  51   1              WDTCN = 0xAD; //Second key
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/21/2017 22:43:10 PAGE 2   

  52   1              // [WDTCN - Watchdog Timer Control]$
  53   1      
  54   1      }
  55          
  56          //================================================================================
  57          // PORTS_0_enter_DefaultMode_from_RESET
  58          //================================================================================
  59          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  60   1              // $[P0 - Port 0 Pin Latch]
  61   1              /*
  62   1               // B0 (Port 0 Bit 0 Latch) = HIGH (P0.0 is high. Set P0.0 to drive or
  63   1               //     float high.)
  64   1               // B1 (Port 0 Bit 1 Latch) = HIGH (P0.1 is high. Set P0.1 to drive or
  65   1               //     float high.)
  66   1               // B2 (Port 0 Bit 2 Latch) = HIGH (P0.2 is high. Set P0.2 to drive or
  67   1               //     float high.)
  68   1               // B3 (Port 0 Bit 3 Latch) = HIGH (P0.3 is high. Set P0.3 to drive or
  69   1               //     float high.)
  70   1               // B4 (Port 0 Bit 4 Latch) = HIGH (P0.4 is high. Set P0.4 to drive or
  71   1               //     float high.)
  72   1               // B5 (Port 0 Bit 5 Latch) = HIGH (P0.5 is high. Set P0.5 to drive or
  73   1               //     float high.)
  74   1               // B6 (Port 0 Bit 6 Latch) = HIGH (P0.6 is high. Set P0.6 to drive or
  75   1               //     float high.)
  76   1               // B7 (Port 0 Bit 7 Latch) = HIGH (P0.7 is high. Set P0.7 to drive or
  77   1               //     float high.)
  78   1               */
  79   1              P0 = P0_B0__HIGH | P0_B1__HIGH | P0_B2__HIGH | P0_B3__HIGH | P0_B4__HIGH
  80   1                              | P0_B5__HIGH | P0_B6__HIGH | P0_B7__HIGH;
  81   1              // [P0 - Port 0 Pin Latch]$
  82   1      
  83   1              // $[P0MDOUT - Port 0 Output Mode]
  84   1              /*
  85   1               // B0 (Port 0 Bit 0 Output Mode) = OPEN_DRAIN (P0.0 output is open-
  86   1               //     drain.)
  87   1               // B1 (Port 0 Bit 1 Output Mode) = OPEN_DRAIN (P0.1 output is open-
  88   1               //     drain.)
  89   1               // B2 (Port 0 Bit 2 Output Mode) = OPEN_DRAIN (P0.2 output is open-
  90   1               //     drain.)
  91   1               // B3 (Port 0 Bit 3 Output Mode) = OPEN_DRAIN (P0.3 output is open-
  92   1               //     drain.)
  93   1               // B4 (Port 0 Bit 4 Output Mode) = OPEN_DRAIN (P0.4 output is open-
  94   1               //     drain.)
  95   1               // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
  96   1               //     drain.)
  97   1               // B6 (Port 0 Bit 6 Output Mode) = OPEN_DRAIN (P0.6 output is open-
  98   1               //     drain.)
  99   1               // B7 (Port 0 Bit 7 Output Mode) = OPEN_DRAIN (P0.7 output is open-
 100   1               //     drain.)
 101   1               */
 102   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 103   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 104   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
 105   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
 106   1              // [P0MDOUT - Port 0 Output Mode]$
 107   1      
 108   1              // $[P0MDIN - Port 0 Input Mode]
 109   1              /*
 110   1               // B0 (Port 0 Bit 0 Input Mode) = ANALOG (P0.0 pin is configured for
 111   1               //     analog mode.)
 112   1               // B1 (Port 0 Bit 1 Input Mode) = DIGITAL (P0.1 pin is configured for
 113   1               //     digital mode.)
 114   1               // B2 (Port 0 Bit 2 Input Mode) = DIGITAL (P0.2 pin is configured for
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/21/2017 22:43:10 PAGE 3   

 115   1               //     digital mode.)
 116   1               // B3 (Port 0 Bit 3 Input Mode) = DIGITAL (P0.3 pin is configured for
 117   1               //     digital mode.)
 118   1               // B4 (Port 0 Bit 4 Input Mode) = DIGITAL (P0.4 pin is configured for
 119   1               //     digital mode.)
 120   1               // B5 (Port 0 Bit 5 Input Mode) = DIGITAL (P0.5 pin is configured for
 121   1               //     digital mode.)
 122   1               // B6 (Port 0 Bit 6 Input Mode) = DIGITAL (P0.6 pin is configured for
 123   1               //     digital mode.)
 124   1               // B7 (Port 0 Bit 7 Input Mode) = DIGITAL (P0.7 pin is configured for
 125   1               //     digital mode.)
 126   1               */
 127   1              P0MDIN = P0MDIN_B0__ANALOG | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
 128   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 129   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 130   1              // [P0MDIN - Port 0 Input Mode]$
 131   1      
 132   1              // $[P0SKIP - Port 0 Skip]
 133   1              /*
 134   1               // B0 (Port 0 Bit 0 Skip) = SKIPPED (P0.0 pin is skipped by the
 135   1               //     crossbar.)
 136   1               // B1 (Port 0 Bit 1 Skip) = NOT_SKIPPED (P0.1 pin is not skipped by the
 137   1               //     crossbar.)
 138   1               // B2 (Port 0 Bit 2 Skip) = NOT_SKIPPED (P0.2 pin is not skipped by the
 139   1               //     crossbar.)
 140   1               // B3 (Port 0 Bit 3 Skip) = NOT_SKIPPED (P0.3 pin is not skipped by the
 141   1               //     crossbar.)
 142   1               // B4 (Port 0 Bit 4 Skip) = NOT_SKIPPED (P0.4 pin is not skipped by the
 143   1               //     crossbar.)
 144   1               // B5 (Port 0 Bit 5 Skip) = NOT_SKIPPED (P0.5 pin is not skipped by the
 145   1               //     crossbar.)
 146   1               // B6 (Port 0 Bit 6 Skip) = NOT_SKIPPED (P0.6 pin is not skipped by the
 147   1               //     crossbar.)
 148   1               // B7 (Port 0 Bit 7 Skip) = NOT_SKIPPED (P0.7 pin is not skipped by the
 149   1               //     crossbar.)
 150   1               */
 151   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__NOT_SKIPPED
 152   1                              | P0SKIP_B2__NOT_SKIPPED | P0SKIP_B3__NOT_SKIPPED
 153   1                              | P0SKIP_B4__NOT_SKIPPED | P0SKIP_B5__NOT_SKIPPED
 154   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 155   1              // [P0SKIP - Port 0 Skip]$
 156   1      
 157   1              // $[P0MASK - Port 0 Mask]
 158   1              /*
 159   1               // B0 (Port 0 Bit 0 Mask Value) = IGNORED (P0.0 pin logic value is
 160   1               //     ignored and will not cause a port mismatch event.)
 161   1               // B1 (Port 0 Bit 1 Mask Value) = IGNORED (P0.1 pin logic value is
 162   1               //     ignored and will not cause a port mismatch event.)
 163   1               // B2 (Port 0 Bit 2 Mask Value) = IGNORED (P0.2 pin logic value is
 164   1               //     ignored and will not cause a port mismatch event.)
 165   1               // B3 (Port 0 Bit 3 Mask Value) = IGNORED (P0.3 pin logic value is
 166   1               //     ignored and will not cause a port mismatch event.)
 167   1               // B4 (Port 0 Bit 4 Mask Value) = IGNORED (P0.4 pin logic value is
 168   1               //     ignored and will not cause a port mismatch event.)
 169   1               // B5 (Port 0 Bit 5 Mask Value) = IGNORED (P0.5 pin logic value is
 170   1               //     ignored and will not cause a port mismatch event.)
 171   1               // B6 (Port 0 Bit 6 Mask Value) = IGNORED (P0.6 pin logic value is
 172   1               //     ignored and will not cause a port mismatch event.)
 173   1               // B7 (Port 0 Bit 7 Mask Value) = IGNORED (P0.7 pin logic value is
 174   1               //     ignored and will not cause a port mismatch event.)
 175   1               */
 176   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__IGNORED
 177   1                              | P0MASK_B3__IGNORED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/21/2017 22:43:10 PAGE 4   

 178   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 179   1              // [P0MASK - Port 0 Mask]$
 180   1      
 181   1              // $[P0MAT - Port 0 Match]
 182   1              /*
 183   1               // B0 (Port 0 Bit 0 Match Value) = HIGH (P0.0 pin logic value is compared
 184   1               //     with logic HIGH.)
 185   1               // B1 (Port 0 Bit 1 Match Value) = HIGH (P0.1 pin logic value is compared
 186   1               //     with logic HIGH.)
 187   1               // B2 (Port 0 Bit 2 Match Value) = HIGH (P0.2 pin logic value is compared
 188   1               //     with logic HIGH.)
 189   1               // B3 (Port 0 Bit 3 Match Value) = HIGH (P0.3 pin logic value is compared
 190   1               //     with logic HIGH.)
 191   1               // B4 (Port 0 Bit 4 Match Value) = HIGH (P0.4 pin logic value is compared
 192   1               //     with logic HIGH.)
 193   1               // B5 (Port 0 Bit 5 Match Value) = HIGH (P0.5 pin logic value is compared
 194   1               //     with logic HIGH.)
 195   1               // B6 (Port 0 Bit 6 Match Value) = HIGH (P0.6 pin logic value is compared
 196   1               //     with logic HIGH.)
 197   1               // B7 (Port 0 Bit 7 Match Value) = HIGH (P0.7 pin logic value is compared
 198   1               //     with logic HIGH.)
 199   1               */
 200   1              P0MAT = P0MAT_B0__HIGH | P0MAT_B1__HIGH | P0MAT_B2__HIGH | P0MAT_B3__HIGH
 201   1                              | P0MAT_B4__HIGH | P0MAT_B5__HIGH | P0MAT_B6__HIGH | P0MAT_B7__HIGH;
 202   1              // [P0MAT - Port 0 Match]$
 203   1      
 204   1      }
 205          
 206          //================================================================================
 207          // PORTS_1_enter_DefaultMode_from_RESET
 208          //================================================================================
 209          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 210   1              // $[P1 - Port 1 Pin Latch]
 211   1              /*
 212   1               // B0 (Port 1 Bit 0 Latch) = HIGH (P1.0 is high. Set P1.0 to drive or
 213   1               //     float high.)
 214   1               // B1 (Port 1 Bit 1 Latch) = HIGH (P1.1 is high. Set P1.1 to drive or
 215   1               //     float high.)
 216   1               // B2 (Port 1 Bit 2 Latch) = HIGH (P1.2 is high. Set P1.2 to drive or
 217   1               //     float high.)
 218   1               // B3 (Port 1 Bit 3 Latch) = HIGH (P1.3 is high. Set P1.3 to drive or
 219   1               //     float high.)
 220   1               // B4 (Port 1 Bit 4 Latch) = HIGH (P1.4 is high. Set P1.4 to drive or
 221   1               //     float high.)
 222   1               // B5 (Port 1 Bit 5 Latch) = HIGH (P1.5 is high. Set P1.5 to drive or
 223   1               //     float high.)
 224   1               // B6 (Port 1 Bit 6 Latch) = HIGH (P1.6 is high. Set P1.6 to drive or
 225   1               //     float high.)
 226   1               // B7 (Port 1 Bit 7 Latch) = HIGH (P1.7 is high. Set P1.7 to drive or
 227   1               //     float high.)
 228   1               */
 229   1              P1 = P1_B0__HIGH | P1_B1__HIGH | P1_B2__HIGH | P1_B3__HIGH | P1_B4__HIGH
 230   1                              | P1_B5__HIGH | P1_B6__HIGH | P1_B7__HIGH;
 231   1              // [P1 - Port 1 Pin Latch]$
 232   1      
 233   1              // $[P1MDOUT - Port 1 Output Mode]
 234   1              /*
 235   1               // B0 (Port 1 Bit 0 Output Mode) = OPEN_DRAIN (P1.0 output is open-
 236   1               //     drain.)
 237   1               // B1 (Port 1 Bit 1 Output Mode) = OPEN_DRAIN (P1.1 output is open-
 238   1               //     drain.)
 239   1               // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
 240   1               //     drain.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/21/2017 22:43:10 PAGE 5   

 241   1               // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
 242   1               //     drain.)
 243   1               // B4 (Port 1 Bit 4 Output Mode) = PUSH_PULL (P1.4 output is push-pull.)
 244   1               // B5 (Port 1 Bit 5 Output Mode) = OPEN_DRAIN (P1.5 output is open-
 245   1               //     drain.)
 246   1               // B6 (Port 1 Bit 6 Output Mode) = OPEN_DRAIN (P1.6 output is open-
 247   1               //     drain.)
 248   1               // B7 (Port 1 Bit 7 Output Mode) = OPEN_DRAIN (P1.7 output is open-
 249   1               //     drain.)
 250   1               */
 251   1              P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 252   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 253   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__OPEN_DRAIN
 254   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 255   1              // [P1MDOUT - Port 1 Output Mode]$
 256   1      
 257   1              // $[P1MDIN - Port 1 Input Mode]
 258   1              /*
 259   1               // B0 (Port 1 Bit 0 Input Mode) = DIGITAL (P1.0 pin is configured for
 260   1               //     digital mode.)
 261   1               // B1 (Port 1 Bit 1 Input Mode) = DIGITAL (P1.1 pin is configured for
 262   1               //     digital mode.)
 263   1               // B2 (Port 1 Bit 2 Input Mode) = DIGITAL (P1.2 pin is configured for
 264   1               //     digital mode.)
 265   1               // B3 (Port 1 Bit 3 Input Mode) = DIGITAL (P1.3 pin is configured for
 266   1               //     digital mode.)
 267   1               // B4 (Port 1 Bit 4 Input Mode) = DIGITAL (P1.4 pin is configured for
 268   1               //     digital mode.)
 269   1               // B5 (Port 1 Bit 5 Input Mode) = DIGITAL (P1.5 pin is configured for
 270   1               //     digital mode.)
 271   1               // B6 (Port 1 Bit 6 Input Mode) = DIGITAL (P1.6 pin is configured for
 272   1               //     digital mode.)
 273   1               // B7 (Port 1 Bit 7 Input Mode) = DIGITAL (P1.7 pin is configured for
 274   1               //     digital mode.)
 275   1               */
 276   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 277   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 278   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__DIGITAL;
 279   1              // [P1MDIN - Port 1 Input Mode]$
 280   1      
 281   1              // $[P1SKIP - Port 1 Skip]
 282   1              /*
 283   1               // B0 (Port 1 Bit 0 Skip) = NOT_SKIPPED (P1.0 pin is not skipped by the
 284   1               //     crossbar.)
 285   1               // B1 (Port 1 Bit 1 Skip) = NOT_SKIPPED (P1.1 pin is not skipped by the
 286   1               //     crossbar.)
 287   1               // B2 (Port 1 Bit 2 Skip) = NOT_SKIPPED (P1.2 pin is not skipped by the
 288   1               //     crossbar.)
 289   1               // B3 (Port 1 Bit 3 Skip) = NOT_SKIPPED (P1.3 pin is not skipped by the
 290   1               //     crossbar.)
 291   1               // B4 (Port 1 Bit 4 Skip) = NOT_SKIPPED (P1.4 pin is not skipped by the
 292   1               //     crossbar.)
 293   1               // B5 (Port 1 Bit 5 Skip) = NOT_SKIPPED (P1.5 pin is not skipped by the
 294   1               //     crossbar.)
 295   1               // B6 (Port 1 Bit 6 Skip) = NOT_SKIPPED (P1.6 pin is not skipped by the
 296   1               //     crossbar.)
 297   1               // B7 (Port 1 Bit 7 Skip) = NOT_SKIPPED (P1.7 pin is not skipped by the
 298   1               //     crossbar.)
 299   1               */
 300   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED
 301   1                              | P1SKIP_B2__NOT_SKIPPED | P1SKIP_B3__NOT_SKIPPED
 302   1                              | P1SKIP_B4__NOT_SKIPPED | P1SKIP_B5__NOT_SKIPPED
 303   1                              | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__NOT_SKIPPED;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/21/2017 22:43:10 PAGE 6   

 304   1              // [P1SKIP - Port 1 Skip]$
 305   1      
 306   1              // $[P1MASK - Port 1 Mask]
 307   1              /*
 308   1               // B0 (Port 1 Bit 0 Mask Value) = IGNORED (P1.0 pin logic value is
 309   1               //     ignored and will not cause a port mismatch event.)
 310   1               // B1 (Port 1 Bit 1 Mask Value) = IGNORED (P1.1 pin logic value is
 311   1               //     ignored and will not cause a port mismatch event.)
 312   1               // B2 (Port 1 Bit 2 Mask Value) = IGNORED (P1.2 pin logic value is
 313   1               //     ignored and will not cause a port mismatch event.)
 314   1               // B3 (Port 1 Bit 3 Mask Value) = IGNORED (P1.3 pin logic value is
 315   1               //     ignored and will not cause a port mismatch event.)
 316   1               // B4 (Port 1 Bit 4 Mask Value) = IGNORED (P1.4 pin logic value is
 317   1               //     ignored and will not cause a port mismatch event.)
 318   1               // B5 (Port 1 Bit 5 Mask Value) = IGNORED (P1.5 pin logic value is
 319   1               //     ignored and will not cause a port mismatch event.)
 320   1               // B6 (Port 1 Bit 6 Mask Value) = IGNORED (P1.6 pin logic value is
 321   1               //     ignored and will not cause a port mismatch event.)
 322   1               // B7 (Port 1 Bit 7 Mask Value) = IGNORED (P1.7 pin logic value is
 323   1               //     ignored and will not cause a port mismatch event.)
 324   1               */
 325   1              P1MASK = P1MASK_B0__IGNORED | P1MASK_B1__IGNORED | P1MASK_B2__IGNORED
 326   1                              | P1MASK_B3__IGNORED | P1MASK_B4__IGNORED | P1MASK_B5__IGNORED
 327   1                              | P1MASK_B6__IGNORED | P1MASK_B7__IGNORED;
 328   1              // [P1MASK - Port 1 Mask]$
 329   1      
 330   1              // $[P1MAT - Port 1 Match]
 331   1              /*
 332   1               // B0 (Port 1 Bit 0 Match Value) = HIGH (P1.0 pin logic value is compared
 333   1               //     with logic HIGH.)
 334   1               // B1 (Port 1 Bit 1 Match Value) = HIGH (P1.1 pin logic value is compared
 335   1               //     with logic HIGH.)
 336   1               // B2 (Port 1 Bit 2 Match Value) = HIGH (P1.2 pin logic value is compared
 337   1               //     with logic HIGH.)
 338   1               // B3 (Port 1 Bit 3 Match Value) = HIGH (P1.3 pin logic value is compared
 339   1               //     with logic HIGH.)
 340   1               // B4 (Port 1 Bit 4 Match Value) = HIGH (P1.4 pin logic value is compared
 341   1               //     with logic HIGH.)
 342   1               // B5 (Port 1 Bit 5 Match Value) = HIGH (P1.5 pin logic value is compared
 343   1               //     with logic HIGH.)
 344   1               // B6 (Port 1 Bit 6 Match Value) = HIGH (P1.6 pin logic value is compared
 345   1               //     with logic HIGH.)
 346   1               // B7 (Port 1 Bit 7 Match Value) = HIGH (P1.7 pin logic value is compared
 347   1               //     with logic HIGH.)
 348   1               */
 349   1              P1MAT = P1MAT_B0__HIGH | P1MAT_B1__HIGH | P1MAT_B2__HIGH | P1MAT_B3__HIGH
 350   1                              | P1MAT_B4__HIGH | P1MAT_B5__HIGH | P1MAT_B6__HIGH | P1MAT_B7__HIGH;
 351   1              // [P1MAT - Port 1 Match]$
 352   1      
 353   1      }
 354          
 355          //================================================================================
 356          // PORTS_3_enter_DefaultMode_from_RESET
 357          //================================================================================
 358          extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
 359   1              // $[P3 - Port 3 Pin Latch]
 360   1              // [P3 - Port 3 Pin Latch]$
 361   1      
 362   1              // $[P3MDOUT - Port 3 Output Mode]
 363   1              /*
 364   1               // B0 (Port 3 Bit 0 Output Mode) = OPEN_DRAIN (P3.0 output is open-
 365   1               //     drain.)
 366   1               // B1 (Port 3 Bit 1 Output Mode) = OPEN_DRAIN (P3.1 output is open-
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/21/2017 22:43:10 PAGE 7   

 367   1               //     drain.)
 368   1               // B2 (Port 3 Bit 2 Output Mode) = OPEN_DRAIN (P3.2 output is open-
 369   1               //     drain.)
 370   1               // B3 (Port 3 Bit 3 Output Mode) = OPEN_DRAIN (P3.3 output is open-
 371   1               //     drain.)
 372   1               // B4 (Port 3 Bit 4 Output Mode) = PUSH_PULL (P3.4 output is push-pull.)
 373   1               // B7 (Port 3 Bit 7 Output Mode) = OPEN_DRAIN (P3.7 output is open-
 374   1               //     drain.)
 375   1               */
 376   1              SFRPAGE = 0x20;
 377   1              P3MDOUT = P3MDOUT_B0__OPEN_DRAIN | P3MDOUT_B1__OPEN_DRAIN
 378   1                              | P3MDOUT_B2__OPEN_DRAIN | P3MDOUT_B3__OPEN_DRAIN
 379   1                              | P3MDOUT_B4__PUSH_PULL | P3MDOUT_B7__OPEN_DRAIN;
 380   1              // [P3MDOUT - Port 3 Output Mode]$
 381   1      
 382   1              // $[P3MDIN - Port 3 Input Mode]
 383   1              // [P3MDIN - Port 3 Input Mode]$
 384   1      
 385   1      }
 386          
 387          //================================================================================
 388          // PBCFG_0_enter_DefaultMode_from_RESET
 389          //================================================================================
 390          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 391   1              // $[XBR2 - Port I/O Crossbar 2]
 392   1              /*
 393   1               // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 394   1               //     Pullups enabled (except for Ports whose I/O are configured for analog
 395   1               //     mode).)
 396   1               // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 397   1               // URT1E (UART1 I/O Enable) = DISABLED (UART1 I/O unavailable at Port
 398   1               //     pin.)
 399   1               // URT1RTSE (UART1 RTS Output Enable) = DISABLED (UART1 RTS1 unavailable
 400   1               //     at Port pin.)
 401   1               // URT1CTSE (UART1 CTS Input Enable) = DISABLED (UART1 CTS1 unavailable
 402   1               //     at Port pin.)
 403   1               */
 404   1              SFRPAGE = 0x00;
 405   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 406   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 407   1                              | XBR2_URT1CTSE__DISABLED;
 408   1              // [XBR2 - Port I/O Crossbar 2]$
 409   1      
 410   1              // $[PRTDRV - Port Drive Strength]
 411   1              // [PRTDRV - Port Drive Strength]$
 412   1      
 413   1              // $[XBR0 - Port I/O Crossbar 0]
 414   1              // [XBR0 - Port I/O Crossbar 0]$
 415   1      
 416   1              // $[XBR1 - Port I/O Crossbar 1]
 417   1              // [XBR1 - Port I/O Crossbar 1]$
 418   1      
 419   1      }
 420          
 421          //================================================================================
 422          // DAC_0_enter_DefaultMode_from_RESET
 423          //================================================================================
 424          extern void DAC_0_enter_DefaultMode_from_RESET(void) {
 425   1              // $[DAC0CF0 - DAC0 Configuration 0]
 426   1              /*
 427   1               // EN (DAC0 Enable) = ENABLE (DAC0 is enabled and will drive the output
 428   1               //     pin.)
 429   1               // UPDATE (DAC0 Update Trigger Source) = TIMER3 (DAC0 output updates
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/21/2017 22:43:10 PAGE 8   

 430   1               //     occur on Timer 3 high byte overflow.)
 431   1               // LJST (DAC0 Left Justify Enable) = RIGHT_JUSTIFY (DAC0 input is treated
 432   1               //     as right-justified.)
 433   1               // RSTMD (DAC0 Reset Mode) = NORMAL (All resets will reset DAC0 and its
 434   1               //     associated registers.)
 435   1               */
 436   1              SFRPAGE = 0x30;
 437   1              DAC0CF0 = DAC0CF0_EN__ENABLE | DAC0CF0_UPDATE__TIMER3
 438   1                              | DAC0CF0_LJST__RIGHT_JUSTIFY | DAC0CF0_RSTMD__NORMAL;
 439   1              // [DAC0CF0 - DAC0 Configuration 0]$
 440   1      
 441   1              // $[DAC0CF1 - DAC0 Configuration 1]
 442   1              // [DAC0CF1 - DAC0 Configuration 1]$
 443   1      
 444   1      }
 445          
 446          //================================================================================
 447          // DAC_1_enter_DefaultMode_from_RESET
 448          //================================================================================
 449          extern void DAC_1_enter_DefaultMode_from_RESET(void) {
 450   1              // $[DAC1CF0 - DAC1 Configuration 0]
 451   1              /*
 452   1               // EN (DAC1 Enable) = ENABLE (DAC1 is enabled and will drive the output
 453   1               //     pin.)
 454   1               // UPDATE (DAC1 Update Trigger Source) = TIMER3 (DAC1 output updates
 455   1               //     occur on Timer 3 high byte overflow.)
 456   1               // LJST (DAC1 Left Justify Enable) = RIGHT_JUSTIFY (DAC1 input is treated
 457   1               //     as right-justified.)
 458   1               // RSTMD (DAC1 Reset Mode) = NORMAL (All resets will reset DAC1 and its
 459   1               //     associated registers.)
 460   1               */
 461   1              DAC1CF0 = DAC1CF0_EN__ENABLE | DAC1CF0_UPDATE__TIMER3
 462   1                              | DAC1CF0_LJST__RIGHT_JUSTIFY | DAC1CF0_RSTMD__NORMAL;
 463   1              // [DAC1CF0 - DAC1 Configuration 0]$
 464   1      
 465   1              // $[DAC1CF1 - DAC1 Configuration 1]
 466   1              // [DAC1CF1 - DAC1 Configuration 1]$
 467   1      
 468   1      }
 469          
 470          //================================================================================
 471          // DACGCF_0_enter_DefaultMode_from_RESET
 472          //================================================================================
 473          extern void DACGCF_0_enter_DefaultMode_from_RESET(void) {
 474   1              // $[DACGCF0 - DAC Global Configuration 0]
 475   1              /*
 476   1               // D01REFSL (DAC0 and DAC1 Reference Voltage Select) = VREF (Select the
 477   1               //     VREF pin.)
 478   1               // D1SRC (DAC1 Data Source) = DAC1 (Input = DAC1H:DAC1L.)
 479   1               // D1AMEN (DAC1 Alternating Mode Enable) = NORMAL (DAC1 always updates
 480   1               //     from the data source selected in D1SRC. This mode may be used with any
 481   1               //     trigger source.)
 482   1               */
 483   1              DACGCF0 = DACGCF0_D01REFSL__VREF | DACGCF0_D1SRC__DAC1
 484   1                              | DACGCF0_D1AMEN__NORMAL;
 485   1              // [DACGCF0 - DAC Global Configuration 0]$
 486   1      
 487   1              // $[DACGCF2 - DAC Global Configuration 2]
 488   1              // [DACGCF2 - DAC Global Configuration 2]$
 489   1      
 490   1      }
 491          
 492          //================================================================================
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/21/2017 22:43:10 PAGE 9   

 493          // VREF_0_enter_DefaultMode_from_RESET
 494          //================================================================================
 495          extern void VREF_0_enter_DefaultMode_from_RESET(void) {
 496   1              // $[REF0CN - Voltage Reference Control]
 497   1              /*
 498   1               // VREFSL (Voltage Reference Output Select) = VREF_2P4 (2.4 V reference
 499   1               //     output to VREF pin.)
 500   1               */
 501   1              SFRPAGE = 0x00;
 502   1              REF0CN = REF0CN_VREFSL__VREF_2P4;
 503   1              // [REF0CN - Voltage Reference Control]$
 504   1      
 505   1      }
 506          
 507          //================================================================================
 508          // CLOCK_0_enter_DefaultMode_from_RESET
 509          //================================================================================
 510          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 511   1              // $[HFOSC1 Setup]
 512   1              // [HFOSC1 Setup]$
 513   1      
 514   1              // $[CLKSEL - Clock Select]
 515   1              /*
 516   1               // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 517   1               //     High Frequency Oscillator 0.)
 518   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 519   1               //     selected clock source divided by 1.)
 520   1               // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 521   1               //     High Frequency Oscillator 0.)
 522   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 523   1               //     selected clock source divided by 1.)
 524   1               */
 525   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 526   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 527   1              while (CLKSEL & CLKSEL_DIVRDY__BMASK == CLKSEL_DIVRDY__NOT_READY)
 528   1                      ;
 529   1              // [CLKSEL - Clock Select]$
 530   1      
 531   1      }
 532          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    125    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
